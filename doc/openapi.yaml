openapi: 3.0.0
info:
  title: Blood Donor API using Typescript, NodeJS, Express, and MongoDB.
  description: With Authentication and Authorization include BCRYPT and JWT.
  version: 1.0.0
servers:
  - url: http://127.0.0.1:3000
    description: Development Server
components:
  securitySchemes:
    bearerAuth:  
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /register:
    post:
      summary: register new member
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  default: user1234
                role:
                  type: string
                  default: admin
                  enum:
                  - admin
                  - member
                password:
                  type: string
                  default: 12345678a
                  minLength: 8
                  pattern: "^[a-zA-Z0-9]+$"
                postalcode:
                  type: string
                  default: 10510
                bloodtype:
                  type: string
                  enum:
                    - A-
                    - A+
                    - B-
                    - B+
                    - AB-
                    - AB+
                    - O-
                    - O+
                age:
                  type: integer
                  default: 20
                  minimum: 17
                  maximum: 60
                weight:
                  type: integer
                  minimum: 45
              required:
                - "username"
                - "role"
                - "password"
                - "postalcode"
                - "bloodtype"
                - "age"
                - "weight"
      responses:
        '201':
          description: Create member
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '409':
          description: Usename already exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string                      
        '500':
          description: Error when create member
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string          
  /login:
      post:
        summary: login to get token
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    default: user1234
                  password:
                    type: string
                    default: 12345678a
        responses:
          '401':
            description: username not exist or password wrong
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
          '200':
            description: succes get token
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    token:
                      type: string
          '500':
            description: error while logging in
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string                           
  /member:
      post:
        security:
          - bearerAuth: []

        summary: get members by bloodtype
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  bloodtype:
                    type: string
                    default: B-
        responses:
          '401':
            description: No token or invalid token
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string        
          '200':
            description: Create member
            content:
              application/json:
                schema:
                  type: object
                  properties:                        
                        username:
                          type: string
                        postalcode:
                          type: string
                        bloodtype:
                          type: string
                        travelDistance:
                          type: string 
                          
          '500':
            description: Error when fetching member
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
  /admin:
      get:
        security:
          - bearerAuth: []
        responses:
          '200':
            description: Display all member
            content:
              application/json:
                schema:
                  type: object
                  properties:                    
                        _id:
                          type: string
                        username:
                          type: string
                        role:
                          type: string
                        password:
                          type: string                        
                        postalcode:
                          type: string
                        bloodtype:
                          type: string
                        age:
                          type: integer                          
                        weight:
                          type: integer
          '401':
            description: No token or wrong token
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
          '403':
            description: Only admin allow to access
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
  /admin/{username}:                      
      patch:
        security:
          - bearerAuth: []
        summary: change member role
        parameters:
          - name: username
            in: path
            required: true
            description: Parameter description in CommonMark or HTML.
            schema:
              type : string
              format: string
              minimum: 1        
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:                  
                  role:
                    type: string
                    default: admin
        responses:
          '401':
            description: No token or invalid token
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string        
          '403':
            description: only admin that has right
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                          
          '200':
            description: Update role success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          '404':
            description: Username not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
          '500':
            description: Error fetching members
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
      delete:
        security:
          - bearerAuth: []
        summary: delete member
        parameters:
          - name: username
            in: path
            required: true
            description: Parameter description in CommonMark or HTML.
            schema:
              type : string
              format: string
              minimum: 1        
        responses:
          '401':
            description: No token or invalid token
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string        
          '403':
            description: only admin that has right
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
                          
          '200':
            description: delete member success
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      type: string
          '404':
            description: Username not found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string
          '500':
            description: Error fetching members
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: string